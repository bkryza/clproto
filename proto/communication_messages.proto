package one.clproto;

message MessageRequest {
    required uint64 stm_id        = 1; // ID of stream requested messages
                                       // belong to
    required uint64 lower_seq_num = 2; // lower bound of sequence numbers of
                                       // requested messages
    required uint64 upper_seq_num = 3; // upper bound of sequence numbers of
                                       // requested messages
}

message MessageAcknowledgement {
    required uint64 stm_id  = 1; // ID of stream acknowledged messages
                                 // belong to
    required uint64 seq_num = 2; // sequence number of last successfully
                                 // processed message from the stream
}

message MessageStream {
    required uint64 stm_id  = 1; // stream ID
    required uint64 seq_num = 2; // sequence number of the message in the stream
    optional bool   eos     = 3; // end of stream flag
}

message MessageStreamReset {
    required uint64 seq_num = 1; // initial sequence number for each stream
}

message Status {
    enum Code {
        VOK        = 1;  // ok
        VENOENT    = 2;  // no such file or directory
        VEACCES    = 3;  // permission denied
        VEEXIST    = 4;  // file exists
        VEIO       = 5;  // input/output error
        VENOTSUP   = 6;  // operation not supported
        VENOTEMPTY = 7;  // directory not empty
        VEREMOTEIO = 8;  // remote input/output error
        VEPERM     = 9;  // operation not permitted
        VEINVAL    = 10; // invalid argument
        VEDQUOT    = 11; // disc quota exceeded
        VENOATTR   = 12; // attribute not found
        VECOMM     = 13; // communication error on send
    }

    required Code  code        = 1; // exit code
    optional bytes description = 2; // optional error description
}